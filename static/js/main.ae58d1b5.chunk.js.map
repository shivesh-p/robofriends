{"version":3,"sources":["Card.js","CardList.js","SearchComponent.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","index","SearchComponent","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAClB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,eACnB,gCACC,6BAAKF,IACL,4BAAIC,WCPN,SAASK,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OAC3BC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OACE,cAAC,EAAD,CAEET,GAAIK,EAAOI,GAAOT,GAClBF,KAAMO,EAAOI,GAAOX,KACpBC,MAAOM,EAAOI,GAAOV,OAHhBU,MAOX,OAAO,8BAAMH,ICXA,SAASI,EAAT,GAA0C,IAAhBC,EAAe,EAAfA,aACvC,OACE,8BACE,uBACEV,UAAU,yCACVW,KAAK,SACLC,YAAY,oBACZC,SAAUH,M,MCAHI,MAPf,SAAgBC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAO,kBAAkBC,OAAO,SAApE,SACKJ,EAAMK,YCyCJC,E,kDAvCb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAP1C,EAAKC,MAAQ,CACXxB,OAAQ,GACRqB,YAAa,IAJH,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEpB,OAAQ6B,S,oBAI9B,WAAU,IAAD,OACDC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAACC,GAC/C,OAAOA,EAAMxC,KACVyC,cACAC,SAAS,EAAKX,MAAMH,YAAYa,kBAErC,OACE,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAACS,EAAD,CAAiBC,aAAcyB,KAAKb,iBACpC,cAAC,EAAD,UACE,cAACnB,EAAD,CAAUC,OAAQ8B,a,GAjCVM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae58d1b5.chunk.js","sourcesContent":["\nimport React from 'react'\n\nconst Card = ({name,email,id}) => {\n        return (\n            <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n                <img alt=\"lmao\" src={`https://robohash.org/${id}?200x200/`}/>\n                <div>\n                 <h2>{name}</h2>\n                 <p>{email}</p>   \n                </div>\n            </div>\n        );\n    }\n\nexport default Card\n","import React from \"react\";\nimport Card from \"./Card\";\nexport default function CardList({ robots }) {\n  const cardComponent = robots.map((user, index) => {\n    return (\n      <Card\n        key={index}\n        id={robots[index].id}\n        name={robots[index].name}\n        email={robots[index].email}\n      />\n    );\n  });\n  return <div>{cardComponent}</div>;\n}\n","import React from \"react\";\n\nexport default function SearchComponent({searchChange}) {\n  return (\n    <div>\n      <input\n        className=\"pa3 ba b--light-green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search the Bots !\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n","import React from 'react'\n\nfunction Scroll(props) {\n    return (\n        <div style = {{overflowY: 'scroll', border:'1px solid black',height:'100vh'}}>\n            {props.children}\n        </div>\n    )\n}\nexport default Scroll\n","import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchComponent from \"./SearchComponent\";\nimport \"./App.css\";\nimport Scroll from './Scroll'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchField.toLowerCase());\n    });\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchComponent searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App'\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}